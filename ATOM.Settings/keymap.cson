# Your keymap
# S. Schödler, 2.7.2018, 15:20:22
# --------------------------------
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Ctrl+.`
# See the Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson

# Search over the whole project
'.platform-win32, .platform-linux':
  'f6': 'project-find:show'

# Perform a Git:Pull command
'.workspace':
  'f10': 'github:pull'

# Custom command keybindings
# ---------------------------------------
# Next result
# Previous result
# Markdown preview fullscreen
#
# WARNING you need to have the following entry in 'init.coffee'

'atom-text-editor':
  'f4': 'find-and-replace:show-and-find-next-selected'
    # atom.commands.add 'atom-workspace', 'find-and-replace:show-and-find-next-selected': ->
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "project-find:show");
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "find-and-replace:find-next-selected");

  'f3': 'find-and-replace:show-and-find-previous-selected'
    # atom.commands.add 'atom-workspace', 'find-and-replace:show-and-find-previous-selected': ->
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "project-find:show");
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "find-and-replace:find-previous-selected");

  'f9': 'markdown-preview:toggle-fullscreen'
    # atom.commands.add 'atom-workspace', 'markdown-preview:toggle-fullscreen': ->
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "markdown-preview:toggle");
    #     sleep 500;
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "window:focus-pane-on-right");
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "pane:move-active-item-to-top-of-stack");
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "tabs:close-tab");
    #     atom.commands.dispatch(atom.views.getView(atom.workspace), "pane:reopen-closed-item");
    # sleep = (ms) ->
    #   start = new Date().getTime()
    #   continue while new Date().getTime() - start < ms
